# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['ureg', 'the_wavelength_emit_from_transition', 'calculate_energy']

# %% ../nbs/00_core.ipynb 4
import pint
import sympy as smp
from scipy.constants import Rydberg, h, c, physical_constants

# %% ../nbs/00_core.ipynb 5
ureg = pint.UnitRegistry()

# %% ../nbs/00_core.ipynb 22
def the_wavelength_emit_from_transition(n1: 'the initial energy level', n2: 'the final energy level'):
    formula = (Rydberg*h*c) * ((1/n_i**2) - (1/n_f**2))
    formula_evaled = formula.subs([(n_i, n1), (n_f, n2)]).evalf()
    equation = smp.Eq(1/lambdaa, formula_evaled)
    return smp.solve(equation, lambdaa)

# %% ../nbs/00_core.ipynb 29
def calculate_energy(**kwargs):
    
    keys = kwargs.keys()
    
    if 'frequency' in keys:
        return h * kwargs['frequency']
    elif 'wavelength' in kwargs:
        return (h * c)/kwargs['wavelength']
