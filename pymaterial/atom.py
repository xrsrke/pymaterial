# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_atom.ipynb.

# %% auto 0
__all__ = ['Element', 'Compound', 'distance']

# %% ../nbs/01_atom.ipynb 3
import numpy as np
from numpy import linalg as LA
from fastcore.test import *

from .core import *
from .unit import Unit

# %% ../nbs/01_atom.ipynb 6
class Element:
    def __init__(self, *,
                 formula: str, # the chemical formula of the element
                 charge: int = 0, # the charge of the element
                 coordinate = None # the coordinate of the element, can be 2D or 3D
                ): # represent an element
        
        e = ChemFormula(formula)
        
        self.element = e.element
        self.unicode = e.unicode
        self.charge = charge
        self.coordinate = coordinate
    
    def __repr__(self):
        return self.unicode

# %% ../nbs/01_atom.ipynb 19
class Compound:
    def __init__(self, **kwargs):
        keys = kwargs

# %% ../nbs/01_atom.ipynb 22
def distance(
    a, # the coordinate of point a
    b # the coordinate of point b
) -> int: # the distance between vector a and vector b
    
    return LA.norm(a - b, 2)
